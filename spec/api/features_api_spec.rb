=begin
#Schematic API

#Schematic API

The version of the OpenAPI document: 0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Schematic::FeaturesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeaturesApi' do
  before do
    # run before each test
    @api_instance = Schematic::FeaturesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeaturesApi' do
    it 'should create an instance of FeaturesApi' do
      expect(@api_instance).to be_instance_of(Schematic::FeaturesApi)
    end
  end

  # unit tests for check_flag
  # Check flag
  # @param key key
  # @param check_flag_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CheckFlagResponse]
  describe 'check_flag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for check_flags
  # Check flags
  # @param check_flags_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CheckFlagsResponse]
  describe 'check_flags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for count_flag_values
  # Count flag values
  # @param entity_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :company_id 
  # @option opts [String] :user_id 
  # @option opts [String] :flag_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [CountFlagValuesResponse]
  describe 'count_flag_values test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_feature
  # Create feature
  # @param create_feature_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateFeatureResponse]
  describe 'create_feature test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_flag
  # Create flag
  # @param create_flag_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateFlagResponse]
  describe 'create_flag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_feature
  # Delete feature
  # @param feature_id feature_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [DeleteFeatureResponse]
  describe 'delete_feature test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_flag
  # Delete flag
  # @param flag_id flag_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [DeleteFlagResponse]
  describe 'delete_flag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feature
  # Get feature
  # @param feature_id feature_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetFeatureResponse]
  describe 'get_feature test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_flag
  # Get flag
  # @param flag_id flag_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetFlagResponse]
  describe 'get_flag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for latest_flag_checks
  # Latest flag checks
  # @param flag_ids 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :flag_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [LatestFlagChecksResponse]
  describe 'latest_flag_checks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_features
  # List features
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListFeaturesResponse]
  describe 'list_features test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_flag_checks
  # List flag checks
  # @param flag_ids 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :flag_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListFlagChecksResponse]
  describe 'list_flag_checks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_flag_values
  # List flag values
  # @param entity_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :company_id 
  # @option opts [String] :user_id 
  # @option opts [String] :flag_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListFlagValuesResponse]
  describe 'list_flag_values test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_flags
  # List flags
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :feature_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListFlagsResponse]
  describe 'list_flags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_feature
  # Update feature
  # @param feature_id feature_id
  # @param update_feature_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [UpdateFeatureResponse]
  describe 'update_feature test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_flag
  # Update flag
  # @param flag_id flag_id
  # @param create_flag_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [UpdateFlagResponse]
  describe 'update_flag test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
