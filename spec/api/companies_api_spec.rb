=begin
#Schematic API

#Schematic API

The version of the OpenAPI document: 0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Schematic::CompaniesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CompaniesApi' do
  before do
    # run before each test
    @api_instance = Schematic::CompaniesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CompaniesApi' do
    it 'should create an instance of CompaniesApi' do
      expect(@api_instance).to be_instance_of(Schematic::CompaniesApi)
    end
  end

  # unit tests for create_company
  # Create company
  # @param upsert_company_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateCompanyResponse]
  describe 'create_company test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_company_membership
  # Create company membership
  # @param get_or_create_company_membership_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateCompanyMembershipResponse]
  describe 'create_company_membership test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user
  # Create user
  # @param upsert_user_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateUserResponse]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_company_membership
  # Delete company membership
  # @param company_membership_id company_membership_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [DeleteCompanyMembershipResponse]
  describe 'delete_company_membership test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_company
  # Get company
  # @param company_id company_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetCompanyResponse]
  describe 'get_company test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user
  # Get user
  # @param user_id user_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetUserResponse]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_companies
  # List companies
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [Array<Integer>] :ids 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListCompaniesResponse]
  describe 'list_companies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_company_memberships
  # List company memberships
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :company_id 
  # @option opts [String] :user_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListCompanyMembershipsResponse]
  describe 'list_company_memberships test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_users
  # List users
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [Array<Integer>] :ids 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListUsersResponse]
  describe 'list_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
