=begin
#Schematic API

#Schematic API

The version of the OpenAPI document: 0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Schematic::PlansApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PlansApi' do
  before do
    # run before each test
    @api_instance = Schematic::PlansApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlansApi' do
    it 'should create an instance of PlansApi' do
      expect(@api_instance).to be_instance_of(Schematic::PlansApi)
    end
  end

  # unit tests for create_plan
  # Create plan
  # @param create_plan_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreatePlanResponse]
  describe 'create_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_plan
  # Delete plan
  # @param plan_id plan_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [DeletePlanResponse]
  describe 'delete_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_plan
  # Get plan
  # @param plan_id plan_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetPlanResponse]
  describe 'get_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_plans
  # List plans
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListPlansResponse]
  describe 'list_plans test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sync_company_plans
  # Sync company plans
  # @param sync_company_plans_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [SyncCompanyPlansResponse]
  describe 'sync_company_plans test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_plan
  # Update plan
  # @param plan_id plan_id
  # @param update_plan_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [UpdatePlanResponse]
  describe 'update_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upsert_billing_period
  # Upsert billing period
  # @param key key
  # @param upsert_billing_period_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [UpsertBillingPeriodResponse]
  describe 'upsert_billing_period test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
