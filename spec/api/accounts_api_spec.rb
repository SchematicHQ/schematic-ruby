=begin
#Schematic API

#Schematic API

The version of the OpenAPI document: 0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Schematic::AccountsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AccountsApi' do
  before do
    # run before each test
    @api_instance = Schematic::AccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountsApi' do
    it 'should create an instance of AccountsApi' do
      expect(@api_instance).to be_instance_of(Schematic::AccountsApi)
    end
  end

  # unit tests for count_api_keys
  # Count api keys
  # @param require_environment 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :environment_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [CountApiKeysResponse]
  describe 'count_api_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_api_key
  # Create api key
  # @param create_api_key_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateApiKeyResponse]
  describe 'create_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_environment
  # Create environment
  # @param create_environment_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateEnvironmentResponse]
  describe 'create_environment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_api_key
  # Delete api key
  # @param api_key_id api_key_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [DeleteApiKeyResponse]
  describe 'delete_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_environment
  # Delete environment
  # @param environment_id environment_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [DeleteEnvironmentResponse]
  describe 'delete_environment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_api_key
  # Get api key
  # @param api_key_id api_key_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetApiKeyResponse]
  describe 'get_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_api_keys
  # List api keys
  # @param require_environment 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :environment_id 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListApiKeysResponse]
  describe 'list_api_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_api_key
  # Update api key
  # @param api_key_id api_key_id
  # @param update_api_key_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [UpdateApiKeyResponse]
  describe 'update_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_environment
  # Update environment
  # @param environment_id environment_id
  # @param update_environment_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [UpdateEnvironmentResponse]
  describe 'update_environment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
