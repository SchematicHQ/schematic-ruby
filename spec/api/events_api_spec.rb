=begin
#Schematic API

#Schematic API

The version of the OpenAPI document: 0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Schematic::EventsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @api_instance = Schematic::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@api_instance).to be_instance_of(Schematic::EventsApi)
    end
  end

  # unit tests for count_event_types
  # Count event types
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :q 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [CountEventTypesResponse]
  describe 'count_event_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for count_events
  # Count events
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :company_id 
  # @option opts [String] :user_id 
  # @option opts [String] :feature_id 
  # @option opts [String] :event_subtype 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [CountEventsResponse]
  describe 'count_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_event
  # Create event
  # @param create_event_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [CreateEventResponse]
  describe 'create_event test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_event
  # Get event
  # @param event_id event_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetEventResponse]
  describe 'get_event test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_event_type
  # Get event type
  # @param key key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @return [GetEventTypeResponse]
  describe 'get_event_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_event_types
  # List event types
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :q 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListEventTypesResponse]
  describe 'list_event_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_events
  # List events
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_schematic_environment_id If the request is made using an API key that is not environment-scoped, specify the environment using this header
  # @option opts [String] :company_id 
  # @option opts [String] :user_id 
  # @option opts [String] :feature_id 
  # @option opts [String] :event_subtype 
  # @option opts [Integer] :limit Page limit (default 100)
  # @option opts [Integer] :offset Page offset (default 0)
  # @option opts [String] :order Order by column
  # @option opts [String] :dir Order direction
  # @return [ListEventsResponse]
  describe 'list_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
